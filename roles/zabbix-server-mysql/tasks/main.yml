---
- include: install_mysql.yml
- include: install_httpd.yml
- include: install_php.yml
- include: install_epel.yml

# Download and install ZABBIX for Centos/RHEL version 7
- name: Download ZABBIX Repo - Centos/RHEL 7
  get_url: url={{ zabbixRepository }} dest=/tmp/zabbix.rpm
  when: "ansible_os_family == 'RedHat' and ansible_distribution_major_version == '7'"

- name: Install ZABBIX Repo - Centos/RHEL 7
  yum:
    name: /tmp/zabbix.rpm
    state: present
  when: "ansible_os_family == 'RedHat' and ansible_distribution_major_version == '7'"

- name: get {{ zabbixRpmGpgKey }}
  get_url: url={{ zabbixRpmGpgKey }} dest=/tmp/RPM-GPG-KEY-ZABBIX
  when: "ansible_os_family == 'RedHat' and ansible_distribution_major_version == '7'"

- name: Import a key from a file
  rpm_key: state=present key=/tmp/RPM-GPG-KEY-ZABBIX

- name: Install zabbix-server
  yum: name={{ item }} enablerepo=zabbix state=latest disable_gpg_check=no
  with_items:
    - zabbix-server-mysql
    - zabbix-web-mysql
    - zabbix-web-japanese
#    - zabbix-get

- name: disabled zabbix repository
  lineinfile: dest=/etc/yum.repos.d/zabbix.repo regexp='^enabled' line="enabled=0"


- name: check .my.cnf exists
  stat:
    path: /root/.my.cnf
  register: mycnf_file

- name: get temporary password
  shell: cat /var/log/mysqld.log | grep "temporary password" | awk '{print $11}'
  register: mysql_default_password
  when: not mycnf_file.stat.exists

- name: deploy init .my.cnf
  template:
    src: templates/init_my.cnf.j2
    dest: /root/.my.cnf
    owner: root
    group: root
    mode: 0644
  when: not mycnf_file.stat.exists

- name: change password validation to the easy way
  shell: >
    mysql -u root -p'{{ mysql_default_password.stdout }}' --connect-expired-password -e "SET GLOBAL validate_password_length=4;";
    mysql -u root -p'{{ mysql_default_password.stdout }}' --connect-expired-password -e "SET GLOBAL validate_password_policy=LOW;";
  when: not mycnf_file.stat.exists

- name: change root user password
  shell: >
    mysql -u root -p'{{ mysql_default_password.stdout }}' --connect-expired-password -e "ALTER USER 'root'@'localhost' IDENTIFIED BY 'root';";
  when: not mycnf_file.stat.exists


- name: deploy change .my.cnf
  template:
    src: templates/my.cnf.j2
    dest: /root/.my.cnf
    owner: root
    group: root
    mode: 0644

- name: deploy changed .my.cnf
  template:
    src: templates/my.cnf.j2
    dest: /etc/my.cnf

# Setting database
- name: Create a new database
  mysql_db: name={{ DBName }} state=present encoding=utf8 collation=utf8_bin
#  mysql_db: name={{ DBName }} state=present encoding=utf8 collation=utf8_bin login_user={{ DBLoginUser }} login_password={{ DBLoginPassword }}

- name: Create database user and 'WITH GRANT OPTION'
  mysql_user: name={{ DBUser }} password={{ DBPassword }} priv={{ DBName }}.*:ALL,GRANT state=present

- name: Importing schema file
  shell: mysql -u{{ DBUser }} -p{{ DBPassword }} {{ DBName }} -e "show tables;" | wc -l
  register: zabbixDatabaseTables
  changed_when: False
- shell: zcat /usr/share/doc/zabbix-server-mysql-*/create.sql.gz | mysql -u{{ DBUser }} -p{{ DBPassword }} {{ DBName }}
  when: zabbixDatabaseTables.stdout|int == 0

# Setting zabbix_server.conf
- name: Setting zabbix_server.conf
  lineinfile: >-
    dest='/etc/zabbix/zabbix_server.conf'
    regexp='{{ item.regexp }}'
    insertafter='{{ item.insertafter }}'
    line='{{ item.line }}'
  with_items:
    - regexp: '^ListenPort='
      insertafter: "^# ListenPort="
      line: 'ListenPort={{ ListenPort }}'
    - regexp: '^LogFile='
      insertafter: "^# LogFile="
      line: 'LogFile={{ LogFile }}'
    - regexp: '^DBHost='
      insertafter: "^# DBHost="
      line: 'DBHost={{ DBHost }}'
    - regexp: '^DBName='
      insertafter: "^# DBName="
      line: 'DBName={{ DBName }}'
    - regexp: '^DBUser='
      insertafter: "^# DBUser="
      line: 'DBUser={{ DBUser }}'
    - regexp: '^DBPassword='
      insertafter: "^# DBPassword="
      line: 'DBPassword={{ DBPassword }}'
    - regexp: '^DBPort='
      insertafter: "^# DBPort="
      line: 'DBPort={{ DBPort }}'
    - regexp: '^DBSocket='
      insertafter: "^# DBSocket="
      line: 'DBSocket={{ DBSocket }}'

# Copy a new 'zabbix.conf.php' file into place
- template: src=zabbix.conf.php.j2 dest=/etc/zabbix/web/zabbix.conf.php owner=apache group=apache mode=0644

- name: start zabbix-server 
  service: name=zabbix-server state=started enabled=yes

- name: restart httpd
  service: name=httpd state=restarted

- name: start firewalld
  service: name=firewalld state=started enabled=yes

- name: set firewall that 80/tcp is enabled  
  firewalld:
    port: 80/tcp
    permanent: true
    state: enabled
    immediate: yes
